generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id            String          @id @default(uuid()) @db.VarChar(36)
  is_active     Boolean         @default(true)
  username      String
  email         String?
  phone_number  String?
  password      String?
  first_name    String          @default("")
  last_name     String          @default("")
  profile       String          @default("")
  fackbook_id   String          @default("")
  google_id     String          @default("")
  device_token  String          @default("")
  kyc           Boolean         @default(false)
  login_version Int             @default(0)
  blacklist     Boolean         @default(false)
  role          userRoles       @default(customer)
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  car_rent      car_rent[]
  kycs          kycs[]
  like_post     like_post[]
  location      location[]
  post          posts[]
  review        review[]
  wallet        wallet[]
  exchange_rate exchange_rate[]

  @@index([username])
  @@index([email])
  @@index([phone_number])
}

model kycs {
  id            String          @id @default(uuid()) @db.VarChar(36)
  is_active     Boolean         @default(true)
  status        Boolean         @default(false)
  user_type     Boolean
  user_id       String          @db.VarChar(36)
  first_name    String
  last_name     String
  birthday      DateTime
  nationality   String
  doc_type      String
  phone_number  String
  point         String?
  village       String?
  district      String?
  province      String?
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  kyc_doc_image kyc_doc_image[]
  user          users           @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "kycs_user_id_fkey")
}

model kyc_doc_image {
  id         Int      @id @default(autoincrement())
  kyc_id     String   @db.VarChar(36)
  url        String
  updated_at DateTime @updatedAt
  kycs       kycs     @relation(fields: [kyc_id], references: [id])

  @@index([kyc_id], map: "kyc_doc_image_kyc_id_fkey")
}

model location {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  user_id    String
  tag        String
  street     String
  point      String
  village    String?
  district   String?
  province   String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       users    @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "location_user_id_fkey")
}

model banners {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  is_public  Boolean  @default(true)
  image      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model promotions {
  id         String     @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean    @default(true)
  is_public  Boolean    @default(true)
  title      String     @default("ຂໍໂທດນີ້ຄືສົມມະນາຄຸນຈາກທາງເຮົາ")
  code       String
  price      Int
  amount     Int
  out_date   DateTime //@default(now())
  count_use  Int
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  car_rent   car_rent[]
  wallet     wallet[]
}

model wallet {
  id           String     @id @default(uuid()) @db.VarChar(36)
  is_active    Boolean    @default(true)
  user_id      String     @db.VarChar(36)
  promotion_id String     @db.VarChar(36)
  is_use       Boolean    @default(true)
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  promotions   promotions @relation(fields: [promotion_id], references: [id])
  users        users      @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([promotion_id])
}

model review {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  user_id    String   @db.VarChar(36)
  post_id    String   @db.VarChar(36)
  star       Float    @default(0)
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post       posts    @relation(fields: [post_id], references: [id])
  user       users    @relation(fields: [user_id], references: [id])

  @@index([post_id])
  @@index([user_id], map: "review_user_id_fkey")
}

model post_status {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  nameLao    String
  nameEng    String
  nameChi    String
  nameRok    String
  priority   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post       posts[]
}

model car_types {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  nameLao    String
  nameEng    String
  nameChi    String
  nameRok    String
  commition  Float    @default(10)
  icon       String
  detail     String
  wheel      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  posts      posts[]
}

model level_insurances {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  nameLao    String
  nameEng    String
  nameChi    String
  nameRok    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post       posts[]
}

model insurance_companies {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  icon       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  post       posts[]
}

model type_of_fuals {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  nameLao    String
  nameEng    String
  nameChi    String
  nameRok    String
  icon       String
  wheel      String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  post       posts[]
}

model like_post {
  user_id String @db.VarChar(36)
  post_id String @db.VarChar(36)
  posts   posts  @relation(fields: [post_id], references: [id])
  users   users  @relation(fields: [user_id], references: [id])

  @@id([user_id, post_id])
  @@index([post_id])
}

model posts {
  id                   String                 @id @default(uuid()) @db.VarChar(36)
  is_active            Boolean                @default(true)
  car_type_id          String                 @db.VarChar(36)
  user_id              String                 @db.VarChar(36)
  star                 Float                  @default(0)
  car_insurance        Boolean
  insurance_company_id String?                @db.VarChar(36)
  level_insurance_id   String?                @db.VarChar(36)
  car_brand            String
  car_version          String
  car_year             String
  car_resgistration    String
  door                 String
  type_of_fual_id      String                 @db.VarChar(36)
  driver_system        String
  seat                 String
  car_color            String
  description          String                 @db.Text
  street               String
  point                String
  village              String
  district             String
  province             String
  mutjum               Float
  status_id            String                 @db.VarChar(36)
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  post_status          Boolean                @default(true)
  pubmai               Float
  province_vehicle     String
  currency             String                 @default("kip")
  car_rent             car_rent[] // Relation to car_rent
  like_post            like_post[] // Relation to likes
  post_car_image       post_car_image[] // Relation to car images
  post_doc_image       post_doc_image[] // Relation to document images
  post_insurance_image post_insurance_image[] // Relation to insurance images
  post_rent_data       post_rent_data[] // Relation to rental data
  car_types            car_types              @relation(fields: [car_type_id], references: [id])
  insurance_company    insurance_companies?   @relation(fields: [insurance_company_id], references: [id])
  level_insurance      level_insurances?      @relation(fields: [level_insurance_id], references: [id])
  status               post_status            @relation(fields: [status_id], references: [id])
  type_of_fual         type_of_fuals          @relation(fields: [type_of_fual_id], references: [id])
  users                users                  @relation(fields: [user_id], references: [id])
  review               review[] // Relation to reviews

  @@index([car_type_id], map: "posts_car_type_id")
  @@index([insurance_company_id], map: "posts_insurance_company_id_fkey")
  @@index([level_insurance_id], map: "posts_level_insurance_id_fkey")
  @@index([status_id], map: "posts_status_id_fkey")
  @@index([type_of_fual_id], map: "posts_type_of_fual_id_fkey")
  @@index([user_id], map: "posts_user_id_fkey")
}

model post_doc_image {
  id      Int    @id @default(autoincrement())
  post_id String @db.VarChar(36)
  url     String
  post    posts  @relation(fields: [post_id], references: [id])

  @@index([post_id])
}

model post_driver_license_image {
  id      Int    @id @default(autoincrement())
  post_id String @db.VarChar(36)
  url     String

  @@index([post_id])
}

model post_car_image {
  id      Int    @id @default(autoincrement())
  post_id String @db.VarChar(36)
  url     String
  post    posts  @relation(fields: [post_id], references: [id])

  @@index([post_id])
}

model post_insurance_image {
  id      Int    @id @default(autoincrement())
  post_id String @db.VarChar(36)
  url     String
  post    posts  @relation(fields: [post_id], references: [id])

  @@index([post_id])
}

model post_rent_data {
  id          Int    @id @default(autoincrement())
  post_id     String @db.VarChar(36)
  title       String
  price       Float
  deposit     Float
  system_cost Float
  total       Float
  post        posts  @relation(fields: [post_id], references: [id])

  @@index([post_id])
}

model car_rent_status {
  id             String     @id @default(uuid()) @db.VarChar(36)
  is_active      Boolean    @default(true)
  priority       Int
  created_at     DateTime   @default(now())
  updated_at     DateTime   @updatedAt
  namePostertChi String?
  namePostertEng String?
  namePostertLao String?
  namePostertRok String?
  nameTenantChi  String
  nameTenantEng  String
  nameTenantLao  String
  nameTenantRok  String
  car_rent       car_rent[]
}

model car_rent {
  id                              String                            @id @default(uuid()) @db.VarChar(36)
  is_active                       Boolean                           @default(true)
  user_id                         String                            @db.VarChar(36)
  post_id                         String                            @db.VarChar(36)
  type_rent                       String
  price_rent                      Float
  start_date                      DateTime                          @db.Date
  end_date                        DateTime                          @db.Date
  frist_name                      String
  last_name                       String
  village                         String
  district                        String
  province                        String
  phone_number                    String
  email                           String
  doc_type                        String
  car_rent_doc_image              car_rent_doc_image[]
  car_rent_driving_lincense_image car_rent_driving_lincense_image[]
  scope                           String?
  description                     String                            @db.LongText
  promotion_id                    String?                           @db.VarChar(36)
  discount                        Float
  total_price                     Float
  booking_fee                     Float
  tax                             Float
  jaiykhon                        Float                             @default(10000000)
  pay_destination                 Float
  khampakan                       Float
  pay_type                        String
  bank_no                         String?                           @db.VarChar(17)
  pay_status                      Boolean                           @default(false)
  reason                          String?                           @db.LongText
  status_id                       String                            @db.VarChar(36)
  currency                        String                            @default("kip")
  admin_id                        String?                           @db.VarChar(36)
  is_success                      Boolean                           @default(true)
  created_at                      DateTime                          @default(now())
  updated_at                      DateTime                          @updatedAt
  post                            posts                             @relation(fields: [post_id], references: [id])
  promotion                       promotions?                       @relation(fields: [promotion_id], references: [id])
  status                          car_rent_status                   @relation(fields: [status_id], references: [id])
  user                            users                             @relation(fields: [user_id], references: [id])
  car_rent_payment_image          car_rent_payment_image[]
  car_rent_visa                   car_rent_visa?

  @@index([post_id], map: "car_rent_post_id_fkey")
  @@index([promotion_id], map: "car_rent_promotion_id_fkey")
  @@index([status_id], map: "car_rent_status_id_fkey")
  @@index([user_id], map: "car_rent_user_id_fkey")
}

model car_rent_doc_image {
  id          Int      @id @default(autoincrement())
  car_rent_id String   @db.VarChar(36)
  url         String
  car_rend    car_rent @relation(fields: [car_rent_id], references: [id])

  @@index([car_rent_id])
}

model car_rent_driving_lincense_image {
  id          Int      @id @default(autoincrement())
  car_rent_id String   @db.VarChar(36)
  url         String
  car_rend    car_rent @relation(fields: [car_rent_id], references: [id])

  @@index([car_rent_id])
}

model car_rent_payment_image {
  id          Int      @id @default(autoincrement())
  car_rent_id String   @db.VarChar(36)
  url         String
  car_rent    car_rent @relation(fields: [car_rent_id], references: [id])

  @@index([car_rent_id])
}

model car_rent_visa {
  id          Int      @id @default(autoincrement())
  car_rent_id String   @unique @db.VarChar(36)
  name        String
  exp_date    DateTime @db.Date
  cvv         String   @db.VarChar(3)
  car_rend    car_rent @relation(fields: [car_rent_id], references: [id])

  @@index([car_rent_id])
}

enum userRoles {
  customer
  admin
  superadmin
}

model exchange_rate {
  id         String   @id @default(uuid()) @db.VarChar(36)
  is_active  Boolean  @default(true)
  currency   String
  icon       String
  buy        Float
  sell       Float
  user_id    String
  users      users    @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
